CREATE PROC spInsetMedicalWaste
@mWID int = NULL,
@mWType varchar(10) = NULL,
@bID int = NULL,
@mWLimit int = NULL,
@mWCurrent int = NULL,
@mwRegularRemoval int = NULL
AS

if EXISTS(SELECT * FROM dbo.MedicalWaste WHERE mWID = @mWID)
	BEGIN
		Raiserror('That value already exists',16,1)
	END
if @mWType is NULL
	BEGIN
		Raiserror('mWType needs to be supplied',16, 1)
	END
if @mWLimit is NULL
	BEGIN
		Raiserror('mWLimit needs to be supplied ie medical waste limit',16,1)
	END
if @mWCurrent is NULL
	BEGIN
		SET @mWCurrent = 30;
	PRINT 'Medical waste regular removal should be defined, record was processed anyway'
	END
if @mwRegularRemoval is NULL
	BEGIN
		Raiserror('mw regular removal needs to be set',16,1)
	END
if @bId is NULL
	BEGIN
		Raiserror('building location needs to be supplied',16,1)
	END

INSERT dbo.MedicalWaste
VALUES(@mWType,@mWLimit,@mWCurrent,@mwRegularRemoval,@bID)


EXEC spInsetMedicalWaste
	15,'bio9',1,100,50,28;
	
	CREATE PROC spINSERT_OFFICE_SUPPLIES
@oSID INT = NULL,
@oSName varchar(50) = NULL,
@oSHistoricUse int = NULL,
@oSCost money = NULL,
@oSCurrentSupplier varchar(50) = NULL,
@oSnumber int = NULL,
@oSReorderID int = NULL,
@bID int = NULL
AS
if EXISTS(SELECT * FROM dbo.OFFICE_SUPPLIES WHERE oSID = @oSID)
	BEGIN
		Raiserror('That value already exists',16,1)
	END
if @oSName is NULL
	BEGIN
		Raiserror('oSNAME is required',16, 1)
	END
if @oSHistoricUse is NULL
	BEGIN
		Raiserror('Historic Use is required',16, 1)
	END
if @osCost is NULL
	BEGIN
		Raiserror('Cost value is required',16, 1)
	END
if @oSCurrentSupplier is NULL
	BEGIN
		Raiserror('Current Supplier is required',16, 1)
	END
if @oSnumber is NULL
	BEGIN
		Raiserror(' Suppliers number is required',16, 1)
	END
if @oSReorderID is NULL
	BEGIN
		Raiserror(' Reorder level is required',16, 1)
	END
if @bID is NULL
	BEGIN
		Raiserror('Building ID required to know where office supplier are located',16, 1)
	END

INSERT dbo.OFFICE_SUPPLIES
VALUES(@oSName,@oSHistoricUse,@oSCost,@oSCurrentSupplier,@oSnumber,@oSReorderID,@bID)

EXEC spINSERT_OFFICE_SUPPLIES
	12,'markers',70,2.00,'CDW',1,1,1
	
CREATE PROC spINSERT_OFFICE_SUPPLIES_N_ADD_PROVIDER
@oSID INT = NULL,
@oSName varchar(50) = NULL,
@oSHistoricUse int = NULL,
@oSCost money = NULL,
@oSCurrentSupplier varchar(50) = NULL,
@oSnumber int = NULL,
@oSReorderID int = NULL,
@bID int = NULL,
@sProviderID int = NULL,
@sProviderName varchar(50) = NULL,
@sProviderDescription varchar(250) = NULL,
@sProviderPrimaryContact varchar(50) = NULL,
@sProviderNumber varchar(15),
@sProviderRating varchar(2)

AS
if NOT EXISTS(SELECT * FROM dbo.SERVICE_PROVIDERS WHERE sProviderID = @sProviderID)
	BEGIN
		if @sProviderName is NULL
		BEGIN
			Raiserror('Providers Name is required',16, 1)
		END
		if @sProviderDescription is NULL
		BEGIN
			Raiserror('Providers description is required',16, 1)
		END
		if @sProviderPrimaryContact is NULL
		BEGIN
			Raiserror('Providers primary contact is required',16, 1)
		END
		if @sProviderNumber is NULL
		BEGIN
			Raiserror('Providers Number is required',16, 1)
		END
		if @sProviderRating is NULL
		BEGIN
			Raiserror('Providers rating is required',16, 1)
		END
	END
		

if EXISTS(SELECT * FROM dbo.OFFICE_SUPPLIES WHERE oSID = @oSID)
	BEGIN
		Raiserror('That value already exists',16,1)
	END
if @oSName is NULL
	BEGIN
		Raiserror('oSNAME is required',16, 1)
	END
if @oSHistoricUse is NULL
	BEGIN
		Raiserror('Historic Use is required',16, 1)
	END
if @osCost is NULL
	BEGIN
		Raiserror('Cost value is required',16, 1)
	END
if @oSCurrentSupplier is NULL
	BEGIN
		Raiserror('Current Supplier is required',16, 1)
	END
if @oSnumber is NULL
	BEGIN
		Raiserror(' Suppliers number is required',16, 1)
	END
if @oSReorderID is NULL
	BEGIN
		Raiserror(' Reorder level is required',16, 1)
	END
if @bID is NULL
	BEGIN
		Raiserror('Building ID required to know where office supplier are located',16, 1)
	END

INSERT dbo.SERVICE_PROVIDERS
VALUES(@sProviderName,@sProviderDescription,@sProviderPrimaryContact,@sProviderNumber,@sProviderRating)

INSERT dbo.OFFICE_SUPPLIES
VALUES(@oSName,@oSHistoricUse,@oSCost,@oSCurrentSupplier,@oSnumber,@oSReorderID,@bID)


CREATE PROC spINSERT_COMPUTER
@ComputerID int = NULL,
@type varchar(2) = NULL,
@cost money = NULL,
@softwareID1 int = NULL,
@softwareID2 int = NULL,
@softwareID3 int = NULL,
@softwareID4 int = NULL,
@softwareID5 int = NULL,
@cCurrentLoc varchar(10) = NULL,
@cPurchaseDate Date = NULL,
@sCID int = NULL,
@bID int = NULL

AS

if EXISTS(SELECT * FROM dbo.COMPUTERS WHERE @ComputerID = @ComputerID)
	BEGIN
		Raiserror('That computer already exists',16,1)
	END
if @type is NULL
	BEGIN
		Raiserror('type is required',16, 1)
	END
if @cost is NULL
	BEGIN
		Raiserror('cost is required',16, 1)
	END
if @softwareID1 is NULL
	BEGIN
		Raiserror('softwareID1 is required',16, 1)
	END
if @softwareID2 is NULL
	BEGIN
		SET @softwareID2 = 0;
	END
if @softwareID3 is NULL
	BEGIN
		SET @softwareID3 = 0;
	END
if @softwareID4 is NULL
	BEGIN
		SET @softwareID4 = 0;
	END
if @softwareID5 is NULL
	BEGIN
		SET @softwareID5 = 0;
	END
if @cCurrentLoc is NULL
	BEGIN
		Raiserror('Current Location is required',16, 1)
	END
if @cPurchaseDate is NULL
	BEGIN
		Raiserror('Purchase date is required',16, 1)
	END
if @sCID is NULL
	BEGIN
		Raiserror('sCID is required',16, 1)
	END
if @bID is NULL
	BEGIN
		Raiserror('Building ID is required',16, 1)
	END

INSERT INTO dbo.COMPUTERS
VALUES(@type,@cost,@softwareID1,@softwareID2,@softwareID3,@softwareID4,@softwareID5,@cCurrentLoc,@cPurchaseDate,@sCID,@bID)

EXEC spINSERT_COMPUTER
	's',100.7,1,2,3,4,1,'AAA','2019-10-10',1,1

EXEC spINSERT_OFFICE_SUPPLIES_N_ADD_PROVIDER
	13,'Auto Stapler',50,50.0,'Max House',13,1,3,13,'Max House','Great Care','Timmy timmy','128-111-1121','AA'
